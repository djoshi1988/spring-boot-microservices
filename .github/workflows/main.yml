# .github/workflows/main.yml
name: CI/CD Spring Boot App Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2    

      - name: Set Up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'      

      - name: Build with Maven
        run: |
          pwd
          ls -ltr                    
          cd spring-boot-microservices          
          mvn clean package -DskipTests
          
      - name: Install Java 8 on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo yum install -y java-1.8.0-openjdk
            
      - name: Transfer JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
             "./spring-boot-microservices/gatewayservice/target/gatewayservice-0.0.1-SNAPSHOT.jar"
             "./spring-boot-microservices/counterservice/target/counterservice-0.0.1-SNAPSHOT.jar"
             "./spring-boot-microservices/configservice/target/configservice-0.0.1-SNAPSHOT.jar"
             "./spring-boot-microservices/registryservice/target/registryservice-0.0.1-SNAPSHOT.jar"
             "./spring-boot-microservices/docker-compose.yml"
          target: "/home/ec2-user"
          
      - name: Install Docker on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install -y docker
            sudo service docker start
            sudo usermod -aG docker $USER  # Optional: Allow running Docker without sudo

      - name: Run App in the background
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            nohup /home/ec2-user/shopping/target/docker-compose up --build > microservice.log 2>&1 &
